---
author: 111qqz
date: 2015-07-30 12:02:00+00:00
draft: false
title: SGU 456 Annuity Payment Scheme
type: post
url: /2015/07/sgu456/
categories:
- ACM
---




D - Annuity Payment Scheme


**Time Limit:**500MS **Memory Limit:**65536KB **64bit IO Format:**%I64d & %I64u


Submit [Status](http://acm.hust.edu.cn/vjudge/contest/view.action?cid=85145#status//D/0) [Practice](http://acm.hust.edu.cn/vjudge/problem/viewProblem.action?id=19146) [SGU 456](http://acm.hust.edu.cn/vjudge/problem/visitOriginUrl.action?id=19146)













Description




  
  
At the peak of the Global Economic Crisis BerBank offered an unprecedented credit program. The offering was so attractive that Vitaly decided to try it. He took a loan of _s_ burles for _m_ months with the interest rate of _p_ percent.   
  
Vitaly has to follow the scheme of annuity payments, meaning that he should make fixed monthly payments -- _x_ burles per month. Obviously, at the end of the period he will pay _m_ * _x_ burles to the bank in total.   
  
Each of the monthly payments is divided by BerBank into two parts as follows:



  * The first part _a__i_ is used to pay off the percent _p_ of the current debt. It's clear that _a__i_=s' * _p_ / 100 where _s_'=s for the first month and equals to the remaining debt for each of the subsequent months.
  * The second part _b__i_ is used to pay off the current debt. The sum of all _b__i_ over the payment period is equal to _s_, meaning that the borrower needs to pay off the debt completely by decreasing it from _s_ to 0 in _m_ months.



BerBank uses calculations with floating-point numbers, and the value of _x_ is uniquely determined by _s_, _m_ and _p_.   
  
For example, if _s_=100, _m_=2, _p_=50 then _x_=90. For the first month _a_1 = _s_' * _p_ / 100 = _s_ * _p_ / 100 = 50 and _b_1 = 90 - 50 = 40. For the second month _a_2 = (100-40) * 50 / 100 = 30, so _b_2 = 90 - 30 = 60 and the debt is paid off completely.   
  
Your task is to help Vitaly and write a program that computes _x_ given the values of _s_, _m_ and _p_.











Input




The single line of the input contains three integers _s_, _m_ and _p_ (1 ≤ _s_ ≤ 10 6, 1 ≤ _m_ ≤ 120, 0 ≤ _p_ ≤ 100).











Output




Output the single value of monthly payment _x_ in burles. An absolute error of up to 10 -5 is allowed.











Sample Input





<table cellpadding="4" cellspacing="0" >
<tbody >
<tr >

<td width="400" valign="top" >

    
    sample input



</td>

<td width="400" valign="top" >

    
    sample output



</td>
</tr>
<tr >

<td width="400" valign="top" >

    
    100 2 50
    



</td>

<td width="400" valign="top" >

    
    90.00000
    






</td>
</tr>
</tbody>
</table>





水题,推个公式出来,注意精度...一遍A


 

    
    /*************************************************************************
    	> File Name: code/2015summer/#5/D.cpp
    	> Author: 111qqz
    	> Email: rkz2013@126.com 
    	> Created Time: 2015年07月30日 星期四 13时17分26秒
     ************************************************************************/
    
    #include<iostream>
    #include<iomanip>
    #include<cstdio>
    #include<algorithm>
    #include<cmath>
    #include<cstring>
    #include<string>
    #include<map>
    #include<set>
    #include<queue>
    #include<vector>
    #include<stack>
    #define y0 abc111qqz
    #define y1 hust111qqz
    #define yn hez111qqz
    #define j1 cute111qqz
    #define tm crazy111qqz
    #define lr dying111qqz
    using namespace std;
    #define REP(i, n) for (int i=0;i<int(n);++i)  
    typedef long long LL;
    typedef unsigned long long ULL;
    const int inf = 0x7fffffff;
    int s,m,p;
    double ans;
    
    double cal(double x,int n)
    {
        double res = 1.0;
        for ( int i = 1 ; i <= n ; i++ )
        {
    	res = res * x;
        }
      //  cout<<"res:"<<res<<endl;
        return res;
    }
    int main()
    {
        cin>>s>>m>>p;
        double sum = 0;
        double per = p*1.0/100+1;
        for ( int i = 1 ; i <= m;  i++ )
        {
    	sum=sum+1.0/cal(per,i);
    //	cout<<"sum:"<<sum<<endl;
        }
     //   cout<<sum<<endl;
        cout<<fixed<<setprecision(5)<<s*1.0/sum<<endl;
      
    	return 0;
    }
    



