---
author: 111qqz
date: 2017-12-03 13:14:40+00:00
draft: false
title: tmp
type: post
url: /2017/12/tmp-2/
categories:
- deep-learning
tags:
- deep learning
---

import pandas as pd
    from sklearn.datasets import fetch_mldata
    mnist = fetch_mldata("MNIST original")
     
    X = mnist.data / 255.0
    y = mnist.target
    #print X.shape, y.shape
    
    feat_cols = [ 'pixel'+str(i) for i in range(X.shape[1]) ]
    df = pd.DataFrame(X,columns=feat_cols) # transform into some pandas DS named DataFrame
    df['label'] = y  # add a column named 'label',valued by variable y
    df['label'] = df['label'].apply(lambda i: str(i))  # df.apply (some funciton)
    X, y = None, None






    
     
    import matplotlib.pyplot as plt
    import numpy as np
    import pandas as pd
    from sklearn.datasets import fetch_mldata
    from sklearn.decomposition import PCA
    import seaborn as sns
    
    n_components_pca = 3
    pca = PCA(n_components=n_components_pca)
    pca_result = pca.fit_transform(df[feat_cols].values)
     
    print 'kkkkk?'
    df['pca-one'] = pca_result[:,0]
    df['pca-two'] = pca_result[:,1] 
    df['pca-three'] = pca_result[:,2]
     
    print 'Explained variation per principal component: {}'.format(pca.explained_variance_ratio_)
     
     
    pca_var_explained_df = pd.DataFrame({'principal component':np.arange(1,n_components_pca+1),
                                        'variance_explained':pca.explained_variance_ratio_})
    print pca_var_explained_df.sum()
     
     
    ax = sns.barplot(x='principal component',
                     y='variance_explained',
                     data=pca_var_explained_df,
                     palette="Set1")
    ax.set_title('PCA - Variance explained')
    plt.show()




    
    import matplotlib.pyplot as plt
    import numpy as np
    import pandas as pd
    from sklearn.datasets import fetch_mldata
    from sklearn.decomposition import PCA
    import seaborn as sns
    mnist = fetch_mldata("MNIST original")
    X = mnist.data / 255.0
    y = mnist.target
    feat_cols = [ 'pixel'+str(i) for i in range(X.shape[1]) ]
    df = pd.DataFrame(X,columns=feat_cols) # transform into some pandas DS named DataFrame
    df['label'] = y  # add a column named 'label',valued by variable y
    df['label'] = df['label'].apply(lambda i: str(i))  # df.apply (some funciton)
    n_components_pca = 3
    pca = PCA(n_components=n_components_pca)
    pca_result = pca.fit_transform(df[feat_cols].values)
    print 'Explained variation per principal component: {}'.format(pca.explained_variance_ratio_)
    pca_var_explained_df = pd.DataFrame({'principal component':np.arange(1,n_components_pca+1),
                                        'variance_explained':pca.explained_variance_ratio_})
    print pca_var_explained_df.sum()
    ax = sns.barplot(x='principal component',
                     y='variance_explained',
                     data=pca_var_explained_df,
                     palette="Set1")
    ax.set_title('PCA - Variance explained')
    plt.show()




